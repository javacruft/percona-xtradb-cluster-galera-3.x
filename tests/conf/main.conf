#declare -r BASE_LOG="$TEST_BASE/log"
declare -r BASE_OUT="$TEST_BASE/out"
mkdir -p "$BASE_OUT"
declare -r BASE_RUN="$TEST_BASE/run"
mkdir -p "$BASE_RUN"
declare -r BASE_CONF="$TEST_BASE/conf"

. ${CLUSTER_CONF:-"$BASE_CONF/cluster.conf"}

if [ "$(uname -s)" == "Darwin" ]; then
    GLB_PRELOAD=${DYLD_INSERT_LIBRARIES:-""}
else
    GLB_PRELOAD=${LD_PRELOAD:-""}
fi
export GLB_PRELOAD

# The code below tries to find available libglb.so and if found, export
# necessary variables for client side load balancing
GLB_LIB=${GLB_LIB:-""}
if [ -z "$GLB_LIB" ]
then
    if [ -r /usr/local/lib/libglb.so ]
    then
        GLB_LIB="/usr/local/lib/libglb.so"
    elif [ -r /usr/lib/libglb.so ]
    then
        GLB_LIB="/usr/lib/libglb.so"
    fi
fi

if [ -r "$GLB_LIB" ]
then
    if [ -n "$GLB_PRELOAD" ]
    then
        export GLB_PRELOAD="$GLB_LIB:$GLB_PRELOAD"
    else
        export GLB_PRELOAD="$GLB_LIB"
    fi

    export GLB_BIND=$DBMS_HOST:$DBMS_PORT

    GLB_TARGETS=""
    for node in $NODE_LIST
    do
        target=${NODE_INCOMING_HOST[$node]}:${NODE_INCOMING_PORT[$node]}
        if [ $node -ne $NODE_MAX ]
        then
            GLB_TARGETS="$GLB_TARGETS$target,"
        else
            GLB_TARGETS="$GLB_TARGETS$target"
        fi
    done
    export GLB_TARGETS
fi

