
Import('env')

libgaleraxx_env = env.Clone()

libgaleraxx_srcs = [
    'mapped_buffer.cpp',
    'write_set.cpp',
    'data_set.cpp',
    'key_set.cpp',
    'write_set_ng.cpp',
    'trx_handle.cpp',
    'key_entry_os.cpp',
    'wsdb.cpp',
    'certification.cpp',
    'galera_service_thd.cpp',
    'wsrep_params.cpp',
    'replicator_smm_params.cpp',
    'gcs_action_source.cpp',
    'galera_info.cpp',
    'replicator.cpp',
    'ist.cpp',
    'gcs_dummy.cpp',
    'saved_state.cpp' ]

libgaleraxx_env.StaticLibrary('galera++', libgaleraxx_srcs)

# Environment for multimaster library build
mmlib_env = libgaleraxx_env.Clone()
mmlib_env.Append(CPPFLAGS = ' -DGALERA_MULTIMASTER')
mmlib_env.Replace(SHOBJPREFIX = 'libmmgalera++-')

# Environment to compile provider unit (part of multimaster library)
# This is needed to hardcode version and revision
mmprovider_env = mmlib_env.Clone()
Import ('GALERA_VER', 'GALERA_REV')
mmprovider_env.Append(CPPFLAGS = ' -DGALERA_VER=\\"' + GALERA_VER + '\\"')
mmprovider_env.Append(CPPFLAGS = ' -DGALERA_REV=\\"' + GALERA_REV + '\\"')

#
env.Append(LIBGALERA_OBJS = libgaleraxx_env.SharedObject(libgaleraxx_srcs))
env.Append(LIBMMGALERA_OBJS = mmlib_env.SharedObject([
            'replicator_smm.cpp',
            'replicator_str.cpp',
            'replicator_smm_stats.cpp'
            ]))
env.Append(LIBMMGALERA_OBJS = mmprovider_env.SharedObject([
            'wsrep_provider.cpp'
            ]))

